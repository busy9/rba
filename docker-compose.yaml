version: '3'

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.14
    container_name: zookeeper
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 1000

  broker:
    image: confluentinc/cp-kafka:6.0.14
    container_name: broker
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:9092,DOCKER_EXTERNAL://:29092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://broker:9092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis:
    image: redis:7.0.11
    container_name: redis
    networks:
      - kafka-net
    ports:
    - "6379:6379"

  rba-producer:
    image: rba-producer:1.0.0
    build: ./rba-producer
    container_name: rba-producer
    networks:
      - kafka-net
    depends_on:
      - zookeeper
      - broker

  rba-rest:
    image: rba-rest:1.0.0
    build: ./rba-rest
    container_name: rba-rest
    networks:
      - kafka-net
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - rba-producer
